server.port=10010

spring.application.name = sharding-jdbc-simple-demo

server.servlet.context-path = /sharding-jdbc-simple-demo
spring.http.encoding.enabled = true
spring.http.encoding.charset = UTF-8
spring.http.encoding.force = true

spring.main.allow-bean-definition-overriding = true

mybatis.configuration.map-underscore-to-camel-case = true


swagger.enable = true



# \u6570\u636E\u6E90
#\u8FD9\u91CC\u914D\u7F6E\u7684\u6570\u636E\u6E90\u7684\u540D\u5B57\u8981\u548C\u4E0B\u9762\u5BF9\u5E94
spring.shardingsphere.datasource.names = m1
spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url = jdbc:mysql://localhost:3306/order_db?useUnicode=true
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = 123456

# \u5206\u7247\u89C4\u5219\u914D\u7F6E

## 1 \u914D\u7F6Et_order\u8868\u7684\u6570\u636E\u5206\u5E03\u60C5\u51B5\uFF0C\u914D\u7F6E\u6570\u636E\u8282\u70B9
### 1.1\u5C06order\u8868\u5206\u4E3A\u4E86\u4E24\u4E2A\u8868\uFF0C\u5206\u522B\u4E3At_order_1,t_order_2
### 1.2 \u6CE8\u610F\u7684\u662F\u8FD9\u91CC\u7684t_order\uFF08tables.t_order\uFF09\u662F\u53EF\u4EE5\u7684\u6539\u7684\uFF0C\u4F46\u662F\u9700\u8981\u548C\u4F60\u4E66\u5199sql\u662F\u5BF9\u5E94\u8D77\u6765
### \u8FD9\u91CC\u7684t_order\u662F\u903B\u8F91\u8868\uFF0C\u5F00\u53D1\u5199sal\u7684\u65F6\u5019\u6307\u5B9A\u7684\u5C31\u662F\u903B\u8F91\u8868\uFF0C\u6700\u7EC8\u4F1A\u88ABsharding-jdbc\u89E3\u6790\u4E3A\u5B9E\u9645\u7684\u7269\u7406\u8868t_order_1,t_order_2
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes = m1.t_order_$->{1..2}

## 2 \u914D\u7F6Et_order\u7684\u4E3B\u952E\u7B56\u7565
### 2.1 \u914D\u7F6Etroder\u8868\u7684\u4E3B\u952E\u5217
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
### 2.2 \u914D\u7F6Et_order\u7684\u4E3B\u952E\u751F\u6210\u7B56\u7565\u4E3A\u96EA\u82B1\u7B97\u6CD5
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

# 3 \u6307\u5B9At_order\u8868\u7684\u5206\u7247\u7B56\u7565\uFF0C\u5206\u7247\u7B56\u7565\u5305\u62EC\u5206\u7247\u952E\u548C\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column = order_id
## \u6839\u636E\u4E3B\u952Eorder_id\u5076\u6570\u653E\u5728t_order_1\uFF0C\u5947\u6570t_order_2
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline..algorithm-expression = t_order_${order_id % 2 +1}


# \u65E5\u5FD7\u914D\u7F6E\u4FE1\u606F
logging.level.root = info
logging.level.org.springframework.web = info
logging.level.com.pbteach.dbsharding  = debug
logging.level.druid.sql = debug